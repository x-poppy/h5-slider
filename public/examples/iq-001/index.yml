version: 0.0.1
info:
  title: "Raven IQ Test"
  favicon: "./favicon.ico"
  description: "Raven IQ Test 001"
  contentBackground: "#f4f8fc"
security:
  knownHosts:
definitions:
  Themes:
    PrimaryColor: '#27527a'
  Permissions:
    PreviousSlide: true
  LocaleMessages:
    PreviousSlide: "Previous"
    NextSlide: "Next"
    SubmitSlide: "Submit"
  Components:
    ExerciseOption:
      type: Option
      props: 
        name: ${optionId}
        checkedColor: ${Themes.PrimaryColor}
      children:
        type: FlexBox
        props:
          width: 6rem
          height: 6rem
          align: center
          justify: center
        children:
          type: Padding
          props:
            padding: "0.5rem 1rem 0.5rem 0"
          children:
            type: Image
            props:
              fit: fill
              width: 100%
              src: "./assets/test/${questionId}${optionId}.svg"
    Exercise:
      type: Slide
      children:
      - type: Gap
      - type: Padding
        children:
        - type: SlideIndicator
          props:
            color: ${Themes.PrimaryColor}
        - type: Gap        
        - type: FlexBox
          props:
            align: center
            justify: center
          children:
          - type: Image
            props:
              fit: fill
              height: 16rem
              width: 16rem
              src: "./assets/test/${questionId}.svg"
        - type: Gap
        - type: OptionGroup
          props:
            name: ${questionId}
            direction: horizontal
          children:
            - type: FlexBox
              props:
                align: center
                justify: center  
              children:
                type: FlexBox
                props:
                  width: 20rem
                  wrap: true
                  justify: center 
                children:
                  type: Group
                  props:
                    random: true
                  children:  
                  - type: ${Components.ExerciseOption}
                    props:
                      optionId: A
                  - type: ${Components.ExerciseOption}
                    props:
                      optionId: B
                  - type: ${Components.ExerciseOption}
                    props:
                      optionId: C
                  - type: ${Components.ExerciseOption}
                    props:
                      optionId: D         
        - type: Gap
          props:
            size: lg
        - type: ActionBar 
          props:
            autoNext: true
            preButtonStyle: 
              color: ${Themes.PrimaryColor}
            nextButtonStyle:
              color: ${Themes.PrimaryColor}
            submitButtonStyle:
              color: ${Themes.PrimaryColor}
            nextButtonEnable: ${${questionId}}
            nextButtonDefaultEnable: false
            submitEffect:
              type: SubmitStoreEffect
              props:
                url: "http://test/api/do/test/test"
                searchMatcher: ["userId", "testId"]

type: Slider
props:
  widgets:
    - type: Module
      props:
        url: "../index/FloatingBall.yml"
children:
  - type: ${Components.Exercise}
    props:
      questionId: 'Q1'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q2' 
  - type: ${Components.Exercise}
    props:
      questionId: 'Q3'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q4'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q5'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q6'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q7'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q8'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q9'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q10'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q11'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q12'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q13'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q14'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q15'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q16'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q17'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q18'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q19'
  - type: ${Components.Exercise}
    props:
      questionId: 'Q20'                                                            
